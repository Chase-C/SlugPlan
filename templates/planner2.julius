$(function() {
  $("body").on('click', function(event) {
    if (!$(event.target).parents().hasClass('course-search-form')) {
      $('.search-suggestions').css('display', 'none');
    }
  });

  var addCourse = function() {
    var newNode = $("<div class='course-container course-display'> \
                       <form class='course-search-form'>           \
                         <input type='text'                        \
                                class='course-search'              \
                                placeholder='Search Class...'      \
                                autocomplete='off'                 \
                                autocapitalize='off'               \
                                autocorrect='off'>                 \
                         <div class='search-suggestions'           \
                              style='display: none;'>              \
                           <div class='search-sug'>...</div>       \
                         </div>                                    \
                       </form>                                     \
                     </div>");

    var butNode  = $('#container-' + this.id);
    var prevNode = butNode.prev('.course-container').last();
    var baseId   = butNode.prop('id');
    var newId    = baseId + '-course-' + 1;
    var formId   = baseId + '-form-'   + 1;
    var barId    = baseId + '-bar-'    + 1;
    var prevId   = prevNode.prop('id');
    if (prevId) {
      var extId = Number(prevId.replace( /\D+\d+\D+/g, '')) + 1;
      newId     = baseId + '-course-' + extId;
      formId    = baseId + '-form-'   + extId;
      barId     = baseId + '-bar-'    + extId;
    }

    var courseSearch = newNode.find('.course-search');
    var searchForm   = newNode.find('.course-search-form');

    newNode.prop('id', newId);
    searchForm.prop('id', formId);
    courseSearch.prop('id', barId);
    courseSearch.on('focus', function(event) {
      $(this).next('.search-suggestions').css('display', 'block');
    });
    courseSearch.on('blur', function(event) {
      if (!$(this).parent().hasClass('js-focus')) {
        $(this).next('.search-suggestions').css('display', 'none');
      }
    });
    courseSearch.on('keyup'
      , newNode.find('.search-suggestions')
      , searchCourse);

    butNode.before(newNode);

    $.ajax({
      url: '@{NewCourseR}',
      type: 'POST',
      contentType: "application/json",
      data: "",
      success: function (data) {
      },
      error: function (data) {
        alert("Error creating course: " + data);
      },
    });
  };

  var searchCourse = function(event) {
    $.ajax({
      url: '/planner/search/' + $(this).val(),
      type: 'GET',
      success: function (data) {
        var divs = data.map(function(course) {
          var sug = $("<div class='search-sug'></div>");
          sug.text(course.subject + " " + course.number + ": " + course.name);
          sug.on('mouseover', function(event) {
            sug.css('background-color', '#eee');
            sug.css('display', 'inline-block');
            sug.css('z-index', '1');
            sug.parent().parent().addClass('js-focus');
          });
          sug.on('mouseout', function(event) {
            sug.css('background-color', '#fff');
            sug.css('display', 'block');
            sug.css('z-index', 'initial');
            sug.parent().parent().removeClass('js-focus');
          });
          sug.on('click', course, selectCourse);

          return sug;
        });
        if (divs.length === 0) {
          event.data.html("<div class='search-sug'> ...</div>");
        } else {
          event.data.html(divs);
        }
      },
      error: function (data) {
        event.data.html("<div class='search-sug'>...</div>");
        console.log("Error getting course: " + data);
      }
    });
  };

  var selectCourse = function(event) {
    var elem = this;
    $.ajax({
      url: '@{NewCourseR}',
      type: 'PUT',
      contentType: 'application/json',
      data: JSON.stringify(event.data.name),
      success: function (data) {
        var container = $(elem).parents('.course-display');
        console.log(container);
        console.log(elem);
        var newNode   = $("<div></div");
        newNode.text(data.name);
        container.append(newNode);
      },
      error: function (data) {
        console.log(data);
      },
    });
  };

  var nextQuarter = function(strn) {
    var splt    = strn.split(' ');
    var quarter = splt[0];
    var year    = Number(splt[1]);
    switch (quarter) {
      case 'Fall':   return 'Winter ' + (year + 1);
      case 'Winter': return 'Spring ' + year;
      case 'Spring': return 'Summer ' + year;
      case 'Summer': return 'Fall '   + year;
      default:       return 'Invalid Quarter';
    }
  };

  $(".course-add-button").click(addCourse);
  $(".quarter-add-button").click(function() {
    var prevId  = $('.course-add-button').last().prop('id');
    var prevQtr = $('#quarter-' + prevId).text();
    var idNum   = Number(prevId.replace( /^\D+/g, '')) + 1;
    var newId   = '#{rawJS courseListId}' + idNum;
    var newQtr  = nextQuarter(prevQtr);
    var newNode = $("<tr>                                         \
                       <td class='quarter-container'>             \
                         <h4 class='quarter-header'></h4>         \
                       </td>                                      \
                       <td>                                       \
                         <div class='course-wrapper'>             \
                           <div class='course-container'>         \
                             <button class='course-add-button' /> \
                           </div>                                 \
                         </div>                                   \
                       </td>                                      \
                     </tr>");

    newNode.find('.quarter-header').text(newQtr);
    newNode.find('.quarter-header').prop('id', 'quarter-' + newId);
    newNode.find('.course-container').prop('id', 'container-' + newId);
    newNode.find('.course-add-button').prop('id', newId);
    newNode.find('.course-add-button').click(addCourse);
    $("#add-quarter").before(newNode);

    $.ajax({
      url: '@{NewCourseR}',
      type: 'POST',
      contentType: "application/json",
      data: "",
      success: function (data) {
      },
      error: function (data) {
        alert("Error creating quarter: " + data);
      }
    });
  });
});
